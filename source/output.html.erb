<div id="Graph"></div>

<div class= "newLine">
	<h3>New Loan</h3>
	<input id="principal" placeholder="Amount Borrowed">
	<br>	
	<div class="subsidized-option">
		<input type="radio" class="subsidized" name="subsidized" value="unsubsidized" required >Unsubsidized</input>
		<input type="radio" class="subsidized" name="subsidized" value="subsidized">Subsidized</input>
		<label class="reveal-active" for="graduation-date">Graduation Month:</label>
		<input class="graduation-date reveal-active" type="month" name="graduation-month" value="2020-05">
	</div>
	<input id="rate" placeholder="Interest Rate">
	<hr>
	<input id="monthlyPayment" placeholder="Monthly payment">
	<p class = "or">OR</p>
	<input id="numOfYears" placeholder="# of years til freedom">	
	<hr>
<button type="button" class= "submit" onclick="submit()">submit</button>

</div>


<script>

function submit() {
	var payment, years, subsidy, principal, rate, month, monthlyPay, numOfYears;
	var array = new Array();

	/* We want this to add another array to localStorage array and populate it with 
	these values*/	
	payment = parseFloat(document.getElementById("monthlyPayment").value);
	years = parseFloat(document.getElementById("numOfYears").value);
	rate = parseFloat(document.getElementById("rate").value);

	var subsidizedVal = $(`input[name="subsidize"]:checked`).val();
	if (subsidizedVal == "subsidized") {
		subsidy = true;
	} else {
		subsidy = false;
	}
	principal = parseFloat(document.getElementById("principal").value);
	monthlyPay = parseFloat(document.getElementById("monthlyPayment").value);
	numOfYears = parseFloat(document.getElementById("numOfYears").value);

	array.push(principal);
	array.push(rate);
	array.push(subsidy);
	array.push(month);
	array.push(numOfYears);
	array.push(monthlyPay);

	var tempArray = JSON.parse(localStorage.getItem("loansArray"));
	tempArray.push(array);

	localStorage.setItem("loansArray", JSON.stringify(tempArray));

	/*Couldn't figure out how to make new data fields in localStorage array, could keep
	all potential info about line in its array in localStorage. Values can be
	null for first page data*/

}

function makeChart() {
	var initial_data = JSON.parse(localStorage.getItem("loansArray"));

	var x_axis = [];

	var i, j;

	//x-axis increments by .5
	for (i=0; i< 30; i+=(1/12)) {
		x_axis.push(i);
	
	}

	//data represents final data given to plot to make graph. Array of arrays
	var data = [];

	data.length = initial_data.length;


	//iterates through localStorage array
	for (i = 0; i< data.length; i++) {

	
	principal = initial_data[i][0];

	//first value on y_axis is the original amount
	y_axis = [principal];

	//can be potentially added as a feature in an "advanced" menu option
	var compound = 365;

	//50 dollars a month is standard minimum payment
	var monthly_payment = 50;
	var interest_rate = initial_data[i][1]/100;

	//creates the y_axis values for individual array i in localStorage
	for (j = 1; j < x_axis.length; j++) {
		var val = y_axis[j-1]*Math.pow((1+interest_rate/(compound)), compound/12)-monthly_payment;
		if (val > 0) {
			y_axis.push(val);
		} else {

				if(initial_data[i][4] == null) {
                               var x = j/12;
                               initial_data[i][4] =x;
                               console.log(x);
                       }
                       y_axis.push(0);


		}
	}

		/*array with type and arguments that Plotly accepts, redeclared to avoid
			aliasing*/
		var temp = {
			x: x_axis,
			y: y_axis,
			type: 'scatter',
			name: "$" + principal + ", " + (interest_rate*100) + "%"
		}

		data[i] = temp; 
	} 
	localStorage.setItem("loansArray", JSON.stringify(initial_data));
	Plotly.newPlot('Graph', data);

	/*after graph is made, text boxes each describing the info of each line are made*/
	makeLineInfo();  

}

/*creates a text box at bottom of the page for every line on the graph*/
function makeLineInfo() {

	var initial_data = JSON.parse(localStorage.getItem("loansArray"));

	//container contains entire section
	var container = document.createElement("DIV");
	container.setAttribute("class", "container");
	document.body.appendChild(container);	


	var i;
	for (i = 0; i<initial_data.length; i++) { 

		//lineInfo div is a wrapper that containes all information on line
		var info = document.createElement("DIV");
		info.setAttribute("class", "lineInfo");	

		var title = document.createElement("H3");
		title.innerText = "Line " + i;

		//could try populating local storage items with this info
		//	would keep data fields default or 0 for initial page info
		var monthly_payment = document.createElement("P");
		monthly_payment.innerText = "Monthly amount: "+initial_data[i][5];
 
		var yearFree = document.createElement("P");
		yearFree.innerText = "Years until paid off: " + (Math.round(initial_data[i][4]*100)/100);
		

		var borrowed = document.createElement("P");
		borrowed.innerText = "Amount Borrowed: " + initial_data[i][0];

		//more items to be added

		
		info.appendChild(title);
		info.appendChild(borrowed);
		info.appendChild(yearFree);
		info.appendChild(monthly_payment);
		container.appendChild(info);
	}
	
	
}

//we make a call automatically to makeChart as soon as page loads here
makeChart();

/*we also want to call makeChart again in submit function. Currently submit function
	needs to create a new LineArray in localStorage array so makeChart includes the 
	new Line when it iterates through the localStorage*/

</script>



